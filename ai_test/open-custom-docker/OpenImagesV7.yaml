# Ultralytics YOLO üöÄ, AGPL-3.0 license
# Open Images v7 dataset https://storage.googleapis.com/openimages/web/index.html by Google
# Documentation: https://docs.ultralytics.com/datasets/detect/open-images-v7/
# Example usage: yolo train data=open-images-v7.yaml
# parent
# ‚îú‚îÄ‚îÄ ultralytics
# ‚îî‚îÄ‚îÄ datasets
#     ‚îî‚îÄ‚îÄ open-images-v7  ‚Üê downloads here (561 GB)

# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: ../datasets/open-images-v7 # dataset root dir
train: images/train # train images (relative to 'path') 1743042 images
val: images/val # val images (relative to 'path') 41620 images
test: # test images (optional)

# Classes
names:
  0: Bird
  1: Butterfly
  2: Owl

# Download script/URL (optional) ---------------------------------------------------------------------------------------
download: |
  from ultralytics.utils import LOGGER, SETTINGS, Path, is_ubuntu, get_ubuntu_version
  from ultralytics.utils.checks import check_requirements, check_version

  check_requirements('fiftyone')
  if is_ubuntu() and check_version(get_ubuntu_version(), '>=22.04'):
      # Ubuntu>=22.04 patch https://github.com/voxel51/fiftyone/issues/2961#issuecomment-1666519347
      check_requirements('fiftyone-db-ubuntu2204')

  import fiftyone as fo
  import fiftyone.zoo as foz
  import warnings

  name = 'open-images-v7'
  fraction = 1.0  # fraction of full dataset to use
  # classes = ["Bird", "Butterfly", "Bear"]
  classes = ['Bird', 'Butterfly', 'Owl']
  LOGGER.warning('WARNING ‚ö†Ô∏è Open Images V7 dataset requires at least **561 GB of free space. Starting download...')
  for split in 'train', 'validation', 'test':  # 1743042 train, 41620 val images
      train = split == 'train'

      # Load Open Images dataset
      dataset = foz.load_zoo_dataset(
        name,
        split=split,
        label_types=['detections'],
        classes=classes,
        dataset_dir=Path(SETTINGS['datasets_dir']) / 'fiftyone' / name,
        max_samples=round((1743042 if train else 41620) * fraction)
      )

      # Define classes
      # if train:
      #   classes = dataset.distinct('ground_truth.detections.label')  # only observed classes
      #   # classes = dataset.default_classes  # all classes
      #   print('Train classes:')
      #   print(classes)

      # Export to YOLO format
      with warnings.catch_warnings():
          warnings.filterwarnings("ignore", category=UserWarning, module="fiftyone.utils.yolo")
          dataset.export(
            export_dir=str(Path(SETTINGS['datasets_dir']) / name),
            dataset_type=fo.types.YOLOv5Dataset,
            label_field='ground_truth',
            split='val' if split == 'validation' else split,
            classes=classes,
            overwrite=train
          )